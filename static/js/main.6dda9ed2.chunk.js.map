{"version":3,"sources":["assets/enter.svg","hooks/input.hook.js","pages/LoginPage/LoginPage.js","pages/OTPPage/OTPPage.js","components/Header/Header.js","components/Card/Card.js","pages/MainPage/MainPage.js","pages/CardInfo/CardInfo.js","App.js","reportWebVitals.js","index.js"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setDirty","valid","isEmpty","setEmpty","minLengthError","setMinLengthError","emailError","setEmailError","inputValid","setInputValid","useEffect","validation","length","test","String","toLowerCase","useValidation","onChange","e","target","onBlur","LoginPage","history","useHistory","email","minLength","isEmail","password","className","name","type","style","color","fontSize","onClick","push","disabled","src","enterBtn","alt","OTPPage","OTP","setOTP","code","i","Math","floor","random","alert","generateCode","Header","props","back","Card","card","id","imageUrl","artist","MainPage","cards","setCards","types","setTypes","subtypes","setSubtypes","selectedCards","setSelectedCards","cardsOnPage","startFrom","setStartFrom","fetch","then","response","json","map","el","index","label","toPage","page","href","classNamePrefix","options","placeholder","event","inputValue","replace","selCards","forEach","subtype","slice","CardInfo","setCard","location","search","getCardInfo","imageUrlHiRes","attacks","cost","damage","text","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.6dda9ed2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/enter.e003ff51.svg\";","import { useState, useEffect } from \"react\";\n\nconst useValidation = (value, validations) => {\n  const [isEmpty, setEmpty] = useState(true);\n  const [minLengthError, setMinLengthError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [inputValid, setInputValid] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case \"minLength\":\n          value.length < validations[validation]\n            ? setMinLengthError(true)\n            : setMinLengthError(false);\n          break;\n        case \"isEmpty\":\n          value ? setEmpty(false) : setEmpty(true);\n          break;\n        case \"isEmail\":\n          const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n      }\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (isEmpty || minLengthError) {\n      setInputValid(false);\n    } else {\n      setInputValid(true);\n    }\n  }, [isEmpty, minLengthError]);\n\n  return {\n    isEmpty,\n    minLengthError,\n    emailError,\n    inputValid\n  };\n};\n\nexport const useInput = (initialValue, validations) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = e => {\n    setDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid\n  };\n};\n","import React from \"react\";\nimport enterBtn from \"../../assets/enter.svg\";\nimport \"./LoginPage.scss\";\nimport { useInput } from \"../../hooks/input.hook.js\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LoginPage() {\n  const history = useHistory();\n  const email = useInput(\"\", { isEmpty: true, minLength: 3, isEmail: true });\n  const password = useInput(\"\", { isEmpty: true, minLength: 5 });\n  const loginHandler = () => {\n    if (email.value === \"kode@kode.ru\" && password.value === \"Enk0deng\") {\n      history.push(\"/otp\");\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"login-form\">\n        <div className=\"email\">\n          <label>email</label>\n          <input\n            value={email.value}\n            name=\"email\"\n            onChange={e => email.onChange(e)}\n            onBlur={e => email.onBlur(e)}\n            type=\"text\"\n          />\n          {email.isDirty && email.isEmpty && (\n            <div style={{ color: \"red\", fontSize: \"10px\" }}>\n              Поле не может быть пустым\n            </div>\n          )}\n          {email.isDirty && email.emailError && (\n            <div style={{ color: \"red\", fontSize: \"10px\" }}>\n              Неккоректный емейл\n            </div>\n          )}\n          {email.isDirty && email.minLengthError && (\n            <div style={{ color: \"red\", fontSize: \"10px\" }}>\n              Неккоректная длина\n            </div>\n          )}\n        </div>\n\n        <div className=\"password\">\n          <label>Password</label>\n          <input\n            value={password.value}\n            onChange={e => password.onChange(e)}\n            onBlur={e => password.onBlur(e)}\n            type=\"password\"\n            name=\"password\"\n          />\n          {password.isDirty && password.isEmpty && (\n            <div style={{ color: \"red\", fontSize: \"10px\" }}>\n              Поле не может быть пустым\n            </div>\n          )}\n          {password.isDirty && password.minLengthError && (\n            <div style={{ color: \"red\", fontSize: \"10px\" }}>\n              Неккоректная длина\n            </div>\n          )}\n        </div>\n        <div className=\"enter-btn\">\n          <button\n            onClick={loginHandler}\n            disabled={!email.inputValid || !password.inputValid}\n          >\n            <img src={enterBtn} alt=\"\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./OTPPage.scss\";\nimport enterBtn from \"../../assets/enter.svg\";\nimport { useInput } from \"../../hooks/input.hook.js\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function OTPPage() {\n  const [OTP, setOTP] = useState(\"\");\n  const code = useInput(\"\", { isEmpty: true, minLength: 4 });\n  const history = useHistory();\n\n  const generateCode = () => {\n    let code = \"\";\n    let num = \"1234567890\";\n\n    for (let i = 0; i < 4; i++) {\n      code += num[Math.floor(Math.random() * 10)];\n    }\n\n    setOTP(code);\n    alert(`Your code: ${code}`);\n  };\n\n  useEffect(() => {\n    generateCode();\n  }, []);\n\n  function OTPHandler() {\n    if (code.value === OTP) {\n      history.push(\"/main\");\n    }\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"otp-form\">\n        <div className=\"code\">\n          <label>Code from sms</label>\n          <input\n            value={code.value}\n            name=\"text\"\n            onChange={e => code.onChange(e)}\n            onBlur={e => code.onBlur(e)}\n            type=\"text\"\n          />\n          {code.isDirty && code.isEmpty && (\n            <div style={{ color: \"red\", fontSize: \"10px\" }}>\n              Поле не может быть пустым\n            </div>\n          )}\n        </div>\n\n        <div className=\"enter-btn\">\n          <button onClick={OTPHandler} disabled={!code.inputValid}>\n            <img src={enterBtn} alt=\"\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Header.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Header(props) {\n  const history = useHistory();\n\n  const back = () => {\n    history.push(\"/main\");\n  };\n\n  const logout = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <header>\n      {props.back && (\n        <div onClick={back} className=\"back\">\n          Back\n        </div>\n      )}\n      <div onClick={logout} className=\"logout\">\n        Logout\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Card(props) {\n  const history = useHistory();\n\n  const openFullInfo = card => {\n    history.push(`/card?${card.id}`);\n  };\n\n  return (\n    <div\n      onClick={() => openFullInfo(props.card)}\n      className=\"card\"\n      key={props.card.id}\n    >\n      <img src={props.card.imageUrl} alt=\"\" />\n      <div className=\"name\">{props.card.name}</div>\n      <div className=\"artist\">{props.card.artist}</div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./MainPage.scss\";\nimport Header from \"./../../components/Header/Header.js\";\nimport Select from \"react-select\";\nimport Card from \"../../components/Card/Card\";\n\nexport default function MainPage() {\n  const [cards, setCards] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [subtypes, setSubtypes] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n\n  const [cardsOnPage] = useState(5);\n  const [startFrom, setStartFrom] = useState(0);\n\n  const getCards = () => {\n    fetch(\"https://api.pokemontcg.io/v1/cards\")\n      .then(response => response.json())\n      .then(response => {\n        setCards(response.cards);\n        setSelectedCards(response.cards);\n      });\n  };\n\n  const getTypes = () => {\n    fetch(\"https://api.pokemontcg.io/v1/types\")\n      .then(response => response.json())\n      .then(response => {\n        return response.types.map((el, index) => {\n          return {\n            value: index,\n            label: el\n          };\n        });\n      })\n      .then(types => {\n        setTypes(types);\n      });\n  };\n\n  const getSubtypes = () => {\n    fetch(\"https://api.pokemontcg.io/v1/subtypes\")\n      .then(response => response.json())\n      .then(response => {\n        return response.subtypes.map((el, index) => {\n          return {\n            value: index,\n            label: el\n          };\n        });\n      })\n      .then(subtypes => {\n        setSubtypes(subtypes);\n      });\n  };\n\n  useEffect(() => {\n    getCards();\n    getTypes();\n    getSubtypes();\n  }, []);\n\n  const handleTypesChange = event => {\n    const inputValue = event.label.replace(/\\W/g, \"\");\n    let selCards = [];\n    cards.forEach(card => {\n      if (card.types) {\n        card.types.forEach(type => {\n          if (type == inputValue) {\n            selCards.push(card);\n          }\n        });\n      }\n    });\n\n    setSelectedCards(selCards);\n    toPage(0);\n    return inputValue;\n  };\n\n  const handleSubtypesChange = event => {\n    const inputValue = event.label.replace(/\\W/g, \"\");\n    let selCards = [];\n    cards.forEach(card => {\n      if (card.subtype && card.subtype == inputValue) {\n        selCards.push(card);\n      }\n    });\n    setSelectedCards(selCards);\n    return inputValue;\n  };\n\n  function toPage(page) {\n    setStartFrom(page * cardsOnPage);\n  }\n\n  return (\n    <div className=\"main-page\">\n      <Header back={false} />\n      <div className=\"pagination\">\n        {selectedCards.length\n          ? selectedCards.map((el, index) => {\n              let i;\n              if (index === 0) {\n                i = 0;\n                return (\n                  <a key={i} onClick={() => toPage(i)} href=\"#\">\n                    {i}\n                  </a>\n                );\n              } else if ((index + 1) % 5 == 0) {\n                i = (index + 1) / 5;\n                return (\n                  <a key={i} onClick={() => toPage(i)} href=\"#\">\n                    {i}\n                  </a>\n                );\n              }\n            })\n          : \"\"}\n      </div>\n\n      <div className=\"content\">\n        <aside>\n          <div className=\"type\">\n            <Select\n              classNamePrefix=\"select\"\n              name=\"type\"\n              options={types}\n              placeholder=\"Type\"\n              onChange={handleTypesChange}\n            />\n          </div>\n          <div className=\"subtype\">\n            <Select\n              classNamePrefix=\"select\"\n              name=\"subtype\"\n              placeholder=\"Subtype\"\n              options={subtypes}\n              onChange={handleSubtypesChange}\n            />\n          </div>\n        </aside>\n\n        <main>\n          {selectedCards.length\n            ? selectedCards\n                .slice(startFrom, startFrom + cardsOnPage)\n                .map(card => {\n                  return <Card card={card} key={card.id}></Card>;\n                })\n            : \"Нет данных\"}\n        </main>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./CardInfo.scss\";\nimport Header from \"./../../components/Header/Header\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function CardInfo() {\n  const history = useHistory();\n  const [card, setCard] = useState({});\n\n  const getCardInfo = () => {\n    let id = history.location.search.slice(1);\n\n    fetch(`https://api.pokemontcg.io/v1/cards?id=${id}`)\n      .then(response => response.json())\n      .then(card => {\n        setCard(card.cards[0]);\n      });\n  };\n\n  useEffect(() => {\n    getCardInfo();\n  }, []);\n\n  return (\n    <div className=\"card-info\">\n      <Header back={true}></Header>\n      <main>\n        <div className=\"upper-info\">\n          <img src={card.imageUrlHiRes} alt=\"\" />\n          <div className=\"properties\">\n            <p>{card.name}</p>\n            <p>{card.types}</p>\n            <p>{card.subtype}</p>\n            <hr />\n            {card.attacks\n              ? card.attacks.map(el => {\n                  return (\n                    <div className=\"attacks\">\n                      <p>{el.name}:</p>\n                      <p>{el.cost}</p>\n                      <p>{el.damage}</p>\n                      <hr />\n                    </div>\n                  );\n                })\n              : \"\"}\n          </div>\n        </div>\n        <div className=\"bottom-info\">\n          <p>{card.text}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n","import LoginPage from \"./pages/LoginPage/LoginPage.js\";\nimport OTPPage from \"./pages/OTPPage/OTPPage.js\";\nimport MainPage from \"./pages/MainPage/MainPage.js\";\nimport CardInfo from \"./pages/CardInfo/CardInfo\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/otp\">\n          <OTPPage></OTPPage>\n        </Route>\n        <Route path=\"/main\">\n          <MainPage></MainPage>\n        </Route>\n        <Route path=\"/card\">\n          <CardInfo></CardInfo>\n        </Route>\n        <Route path=\"/\">\n          <LoginPage></LoginPage>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}